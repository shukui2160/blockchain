<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.minute.service.block.mapper.EthAccountMapper">
	<resultMap id="BaseResultMap"
		type="com.minute.service.block.entry.EthAccount">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="account_address" jdbcType="VARCHAR"
			property="accountAddress" />
		<result column="account_passwd" jdbcType="VARCHAR"
			property="accountPasswd" />
		<result column="type" jdbcType="CHAR" property="type" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, account_address, account_passwd, type, create_time, update_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from eth_account
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from eth_account
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.minute.service.block.entry.EthAccount">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into eth_account (account_address, account_passwd, type,
		create_time, update_time)
		values (#{accountAddress,jdbcType=VARCHAR},
		#{accountPasswd,jdbcType=VARCHAR}, #{type,jdbcType=CHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.minute.service.block.entry.EthAccount">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into eth_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="accountAddress != null">
				account_address,
			</if>
			<if test="accountPasswd != null">
				account_passwd,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="accountAddress != null">
				#{accountAddress,jdbcType=VARCHAR},
			</if>
			<if test="accountPasswd != null">
				#{accountPasswd,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.minute.service.block.entry.EthAccount">
		update eth_account
		<set>
			<if test="accountAddress != null">
				account_address = #{accountAddress,jdbcType=VARCHAR},
			</if>
			<if test="accountPasswd != null">
				account_passwd = #{accountPasswd,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.minute.service.block.entry.EthAccount">
		update eth_account
		set account_address = #{accountAddress,jdbcType=VARCHAR},
		account_passwd = #{accountPasswd,jdbcType=VARCHAR},
		type = #{type,jdbcType=CHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>


	<select id="selectByAccountAddress"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from eth_account
		where account_address =
		#{accountAddress,jdbcType=VARCHAR}
	</select>

</mapper>