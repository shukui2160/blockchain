<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.minute.service.wallet.mapper.UserRecordMapper">
	<resultMap id="BaseResultMap"
		type="com.minute.service.wallet.entry.UserRecord">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="deal_id" jdbcType="VARCHAR" property="dealId" />
		<result column="tx_hash" jdbcType="VARCHAR" property="txHash" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="user_coin_id" jdbcType="BIGINT"
			property="userCoinId" />
		<result column="coin_token_code" jdbcType="VARCHAR"
			property="coinTokenCode" />
		<result column="one_leave_type" jdbcType="CHAR"
			property="oneLeaveType" />
		<result column="two_leave_type" jdbcType="VARCHAR"
			property="twoLeaveType" />
		<result column="type_note" jdbcType="VARCHAR"
			property="typeNote" />
		<result column="value" jdbcType="VARCHAR" property="value" />
		<result column="status" jdbcType="CHAR" property="status" />
		<result column="record_info" jdbcType="VARCHAR"
			property="recordInfo" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, deal_id, tx_hash, user_id, user_coin_id,
		coin_token_code,
		one_leave_type, two_leave_type,
		type_note, value,
		status, record_info, create_time, update_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_record
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		user_record
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.minute.service.wallet.entry.UserRecord">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user_record (deal_id, tx_hash, user_id,
		user_coin_id,
		coin_token_code, one_leave_type,
		two_leave_type, type_note, value,
		status, record_info, create_time,
		update_time)
		values
		(#{dealId,jdbcType=VARCHAR}, #{txHash,jdbcType=VARCHAR},
		#{userId,jdbcType=BIGINT},
		#{userCoinId,jdbcType=BIGINT},
		#{coinTokenCode,jdbcType=VARCHAR}, #{oneLeaveType,jdbcType=CHAR},
		#{twoLeaveType,jdbcType=VARCHAR}, #{typeNote,jdbcType=VARCHAR},
		#{value,jdbcType=VARCHAR},
		#{status,jdbcType=CHAR},
		#{recordInfo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.minute.service.wallet.entry.UserRecord">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="dealId != null">
				deal_id,
			</if>
			<if test="txHash != null">
				tx_hash,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="userCoinId != null">
				user_coin_id,
			</if>
			<if test="coinTokenCode != null">
				coin_token_code,
			</if>
			<if test="oneLeaveType != null">
				one_leave_type,
			</if>
			<if test="twoLeaveType != null">
				two_leave_type,
			</if>
			<if test="typeNote != null">
				type_note,
			</if>
			<if test="value != null">
				value,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="recordInfo != null">
				record_info,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="dealId != null">
				#{dealId,jdbcType=VARCHAR},
			</if>
			<if test="txHash != null">
				#{txHash,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="userCoinId != null">
				#{userCoinId,jdbcType=BIGINT},
			</if>
			<if test="coinTokenCode != null">
				#{coinTokenCode,jdbcType=VARCHAR},
			</if>
			<if test="oneLeaveType != null">
				#{oneLeaveType,jdbcType=CHAR},
			</if>
			<if test="twoLeaveType != null">
				#{twoLeaveType,jdbcType=VARCHAR},
			</if>
			<if test="typeNote != null">
				#{typeNote,jdbcType=VARCHAR},
			</if>
			<if test="value != null">
				#{value,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=CHAR},
			</if>
			<if test="recordInfo != null">
				#{recordInfo,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.minute.service.wallet.entry.UserRecord">
		update user_record
		<set>
			<if test="dealId != null">
				deal_id = #{dealId,jdbcType=VARCHAR},
			</if>
			<if test="txHash != null">
				tx_hash = #{txHash,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="userCoinId != null">
				user_coin_id = #{userCoinId,jdbcType=BIGINT},
			</if>
			<if test="coinTokenCode != null">
				coin_token_code = #{coinTokenCode,jdbcType=VARCHAR},
			</if>
			<if test="oneLeaveType != null">
				one_leave_type = #{oneLeaveType,jdbcType=CHAR},
			</if>
			<if test="twoLeaveType != null">
				two_leave_type = #{twoLeaveType,jdbcType=VARCHAR},
			</if>
			<if test="typeNote != null">
				type_note = #{typeNote,jdbcType=VARCHAR},
			</if>
			<if test="value != null">
				value = #{value,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=CHAR},
			</if>
			<if test="recordInfo != null">
				record_info = #{recordInfo,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.minute.service.wallet.entry.UserRecord">
		update user_record
		set deal_id =
		#{dealId,jdbcType=VARCHAR},
		tx_hash = #{txHash,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=BIGINT},
		user_coin_id =
		#{userCoinId,jdbcType=BIGINT},
		coin_token_code =
		#{coinTokenCode,jdbcType=VARCHAR},
		one_leave_type =
		#{oneLeaveType,jdbcType=CHAR},
		two_leave_type =
		#{twoLeaveType,jdbcType=VARCHAR},
		type_note =
		#{typeNote,jdbcType=VARCHAR},
		value = #{value,jdbcType=VARCHAR},
		status
		= #{status,jdbcType=CHAR},
		record_info =
		#{recordInfo,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>



	<select id="selectBillsByUserCoinId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		user_record
		where user_id = #{userId,jdbcType=BIGINT} and
		user_coin_id =
		#{userCoinId,jdbcType=BIGINT}
	</select>
	
	<select id="selectBillsByUserCoinIdType" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		user_record
		where user_id = #{userId,jdbcType=BIGINT} and
		user_coin_id =
		#{userCoinId,jdbcType=BIGINT}
		<if test="type != null and type!= ''">
			and one_leave_type = #{type,jdbcType=CHAR}
		</if>
	</select>

	<select id="selectByDealId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		user_record
		where deal_id = #{dealId,jdbcType=VARCHAR}
	</select>

</mapper>