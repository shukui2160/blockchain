<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.minute.service.wallet.mapper.UserCoinMapper">
	<resultMap id="BaseResultMap"
		type="com.minute.service.wallet.entry.UserCoin">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="wallet_id" jdbcType="BIGINT"
			property="walletId" />
		<result column="coin_token_id" jdbcType="BIGINT"
			property="coinTokenId" />
		<result column="coin_token_code" jdbcType="VARCHAR"
			property="coinTokenCode" />
		<result column="type" jdbcType="CHAR" property="type" />
		<result column="account_add" jdbcType="VARCHAR"
			property="accountAdd" />
		<result column="account_num" jdbcType="VARCHAR"
			property="accountNum" />
		<result column="account_available_num" jdbcType="VARCHAR"
			property="accountAvailableNum" />
		<result column="account_lock_num" jdbcType="VARCHAR"
			property="accountLockNum" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, wallet_id, coin_token_id, coin_token_code, type,
		account_add,
		account_num, account_available_num,
		account_lock_num,
		create_time, update_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_coin
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		user_coin
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.minute.service.wallet.entry.UserCoin">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user_coin (wallet_id, coin_token_id, coin_token_code,
		type, account_add, account_num,
		account_available_num,
		account_lock_num, create_time,
		update_time)
		values
		(#{walletId,jdbcType=BIGINT}, #{coinTokenId,jdbcType=BIGINT},
		#{coinTokenCode,jdbcType=VARCHAR},
		#{type,jdbcType=CHAR},
		#{accountAdd,jdbcType=VARCHAR}, #{accountNum,jdbcType=VARCHAR},
		#{accountAvailableNum,jdbcType=VARCHAR},
		#{accountLockNum,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.minute.service.wallet.entry.UserCoin">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user_coin
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="walletId != null">
				wallet_id,
			</if>
			<if test="coinTokenId != null">
				coin_token_id,
			</if>
			<if test="coinTokenCode != null">
				coin_token_code,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="accountAdd != null">
				account_add,
			</if>
			<if test="accountNum != null">
				account_num,
			</if>
			<if test="accountAvailableNum != null">
				account_available_num,
			</if>
			<if test="accountLockNum != null">
				account_lock_num,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="walletId != null">
				#{walletId,jdbcType=BIGINT},
			</if>
			<if test="coinTokenId != null">
				#{coinTokenId,jdbcType=BIGINT},
			</if>
			<if test="coinTokenCode != null">
				#{coinTokenCode,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=CHAR},
			</if>
			<if test="accountAdd != null">
				#{accountAdd,jdbcType=VARCHAR},
			</if>
			<if test="accountNum != null">
				#{accountNum,jdbcType=VARCHAR},
			</if>
			<if test="accountAvailableNum != null">
				#{accountAvailableNum,jdbcType=VARCHAR},
			</if>
			<if test="accountLockNum != null">
				#{accountLockNum,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.minute.service.wallet.entry.UserCoin">
		update user_coin
		<set>
			<if test="walletId != null">
				wallet_id = #{walletId,jdbcType=BIGINT},
			</if>
			<if test="coinTokenId != null">
				coin_token_id = #{coinTokenId,jdbcType=BIGINT},
			</if>
			<if test="coinTokenCode != null">
				coin_token_code = #{coinTokenCode,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=CHAR},
			</if>
			<if test="accountAdd != null">
				account_add = #{accountAdd,jdbcType=VARCHAR},
			</if>
			<if test="accountNum != null">
				account_num = #{accountNum,jdbcType=VARCHAR},
			</if>
			<if test="accountAvailableNum != null">
				account_available_num =
				#{accountAvailableNum,jdbcType=VARCHAR},
			</if>
			<if test="accountLockNum != null">
				account_lock_num = #{accountLockNum,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.minute.service.wallet.entry.UserCoin">
		update user_coin
		set wallet_id =
		#{walletId,jdbcType=BIGINT},
		coin_token_id =
		#{coinTokenId,jdbcType=BIGINT},
		coin_token_code =
		#{coinTokenCode,jdbcType=VARCHAR},
		type = #{type,jdbcType=CHAR},
		account_add = #{accountAdd,jdbcType=VARCHAR},
		account_num =
		#{accountNum,jdbcType=VARCHAR},
		account_available_num =
		#{accountAvailableNum,jdbcType=VARCHAR},
		account_lock_num =
		#{accountLockNum,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>




	<select id="selectByWalletId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_coin
		where wallet_id = #{walletId,jdbcType=BIGINT} and
		coin_token_id = #{coinTokenId,jdbcType=BIGINT} and
		type =
		#{type,jdbcType=CHAR}
	</select>

	<select id="selectByWalletIdForUpdate" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_coin
		where wallet_id = #{walletId,jdbcType=BIGINT} and
		coin_token_id = #{coinTokenId,jdbcType=BIGINT} and
		type =
		#{type,jdbcType=CHAR}
	</select>

	<select id="selectCoinsByWalletId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_coin
		where wallet_id = #{walletId,jdbcType=BIGINT}
	</select>

	<select id="selectByAccountAdd" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_coin
		where account_add = #{accountAdd,jdbcType=VARCHAR} and type = '0'
	</select>

</mapper>