<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.minute.application.app.mapper.ProjectAccountMapper">
	<resultMap id="BaseResultMap"
		type="com.minute.application.app.entry.ProjectAccount">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="project_id" jdbcType="BIGINT"
			property="projectId" />
		<result column="coin_id" jdbcType="BIGINT" property="coinId" />
		<result column="coin_address" jdbcType="VARCHAR"
			property="coinAddress" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, project_id, coin_id, coin_address, create_time,
		update_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from project_account
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		project_account
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.minute.application.app.entry.ProjectAccount">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into project_account (project_id, coin_id, coin_address,
		create_time, update_time)
		values (#{projectId,jdbcType=BIGINT},
		#{coinId,jdbcType=BIGINT},
		#{coinAddress,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.minute.application.app.entry.ProjectAccount">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into project_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="projectId != null">
				project_id,
			</if>
			<if test="coinId != null">
				coin_id,
			</if>
			<if test="coinAddress != null">
				coin_address,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="projectId != null">
				#{projectId,jdbcType=BIGINT},
			</if>
			<if test="coinId != null">
				#{coinId,jdbcType=BIGINT},
			</if>
			<if test="coinAddress != null">
				#{coinAddress,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.minute.application.app.entry.ProjectAccount">
		update project_account
		<set>
			<if test="projectId != null">
				project_id = #{projectId,jdbcType=BIGINT},
			</if>
			<if test="coinId != null">
				coin_id = #{coinId,jdbcType=BIGINT},
			</if>
			<if test="coinAddress != null">
				coin_address = #{coinAddress,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.minute.application.app.entry.ProjectAccount">
		update project_account
		set project_id =
		#{projectId,jdbcType=BIGINT},
		coin_id = #{coinId,jdbcType=BIGINT},
		coin_address = #{coinAddress,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="selectByProjectId" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from project_account
		where project_id =#{projectId,jdbcType=BIGINT}
	</select>

</mapper>